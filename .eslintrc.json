{
  "overrides": [
    {
      "extends": ["plugin:@typescript-eslint/recommended-requiring-type-checking", "plugin:prettier/recommended"],
      "files": ["*.ts", "*.tsx"],
      "parserOptions": {
        "project": "tsconfig.json"
      },
      "rules": {
        "@typescript-eslint/unbound-method": "off"
      }
    },
    {
      "files": ["*.mjs"],
      "rules": {
        "no-restricted-imports": "off",
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    }
  ],
  "ignorePatterns": "tailwind.config.cjs",
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "import"],
  "extends": ["next/core-web-vitals", "plugin:@typescript-eslint/recommended"],
  "rules": {
    "@typescript-eslint/consistent-type-imports": ["error", { "disallowTypeAnnotations": false }],
    "no-restricted-imports": ["error", { "patterns": ["**/../*", ".*"] }],
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": "error",
    "no-empty-pattern": "error",
    "no-empty": ["error", { "allowEmptyCatch": true }],
    "quotes": ["error", "single"],
    "no-console": ["warn"],
    "import/no-duplicates": "error",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ImportDeclaration[source.value='react'] > ImportDefaultSpecifier",
        "message": "React should be not imported"
      }
    ],
    "import/no-unused-modules": [
      "off",
      {
        "unusedExports": true,
        "src": ["**/*.ts", "**/*.tsx"],
        "ignoreExports": ["**/*.d.ts", "**/vite.config.ts"]
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      { "props": "never", "children": "never", "propElementValues": "always" }
    ]
  }
}
